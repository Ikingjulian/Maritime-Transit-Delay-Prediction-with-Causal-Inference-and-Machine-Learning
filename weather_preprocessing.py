# -*- coding: utf-8 -*-
"""Weather_preprocessing.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1UE5NWep_X3mpSmS7knauFM7RXaOzBi2N
"""

!pip install kaggle

import os
from google.colab import userdata

# Create the .kaggle directory and kaggle.json file
!mkdir ~/.kaggle
with open('/root/.kaggle/kaggle.json', 'w') as f:
    f.write(userdata.get('KAGGLE_JSON'))

# Set permissions for the kaggle.json file
!chmod 600 ~/.kaggle/kaggle.json

# Download the dataset
!kaggle datasets download -d nish8090/kattegat-strait-weather-dataset

# Unzip the downloaded dataset
!unzip kattegat-strait-weather-dataset.zip

import pandas as pd

weather_df = pd.read_csv('denmark_weather_jan_dec_2024.csv')
weather_df.head()

import matplotlib.pyplot as plt
import numpy as np

wind_counts = weather_df['Wind direction'].value_counts().sort_index()

# Convert degrees to radians for plotting
directions = np.linspace(0, 2 * np.pi, len(wind_counts), endpoint=False)

fig, ax = plt.subplots(figsize=(8, 8), subplot_kw={'projection': 'polar'})

ax.bar(directions, wind_counts.values, width=0.4, bottom=0.0, color='blue', alpha=0.7)

# Set the direction labels
ax.set_xticks(directions)
ax.set_xticklabels(wind_counts.index)

ax.set_title('Wind Direction Distribution')
plt.show()

import seaborn as sns
import matplotlib.pyplot as plt

# Select only the numerical columns for the heatmap
numerical_df = weather_df.select_dtypes(include=np.number)

# Calculate the correlation matrix
correlation_matrix = numerical_df.corr()

# Create the heatmap
plt.figure(figsize=(10, 8))
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f")
plt.title('Correlation Heatmap of Weather Data')
plt.show()

import matplotlib.pyplot as plt
import numpy as np

# Calculate average wind speed for each wind direction
average_wind_speed = weather_df.groupby('Wind direction')['Wind Speed (mph)'].mean()

# Reindex to match the order of directions in the previous plot
wind_counts = weather_df['Wind direction'].value_counts().sort_index()
average_wind_speed = average_wind_speed.reindex(wind_counts.index)


# Convert degrees to radians for plotting (using the same directions as before)
directions = np.linspace(0, 2 * np.pi, len(average_wind_speed), endpoint=False)

fig, ax = plt.subplots(figsize=(8, 8), subplot_kw={'projection': 'polar'})

ax.bar(directions, average_wind_speed.values, width=0.4, bottom=0.0, color='green', alpha=0.7)

# Set the direction labels
ax.set_xticks(directions)
ax.set_xticklabels(average_wind_speed.index)

ax.set_title('Average Wind Speed by Wind Direction')
plt.show()

import matplotlib.pyplot as plt
import seaborn as sns

# Calculate average wind speed per month
average_wind_speed_month = weather_df.groupby('Month')['Wind Speed (mph)'].mean()

# Define the order of months
month_order = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']

# Reindex the series to ensure the correct order of months
average_wind_speed_month = average_wind_speed_month.reindex(month_order)

# Create the plot
plt.figure(figsize=(10, 6))
sns.lineplot(x=average_wind_speed_month.index, y=average_wind_speed_month.values)
plt.title('Average Wind Speed by Month')
plt.xlabel('Month')
plt.ylabel('Average Wind Speed (mph)')
plt.grid(True)
plt.show()